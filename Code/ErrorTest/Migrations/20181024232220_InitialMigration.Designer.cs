// <auto-generated />
using System;
using ErrorTest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ErrorTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181024232220_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ErrorTest.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ErrorTest.Domain.Entities.UserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type");

                    b.Property<Guid>("UserId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("ErrorTest.Domain.Entities.User", b =>
                {
                    b.OwnsOne("ErrorTest.Domain.ValueObjects.FullName", "Name", b1 =>
                        {
                            b1.Property<Guid?>("UserId");

                            b1.ToTable("Users");

                            b1.HasOne("ErrorTest.Domain.Entities.User")
                                .WithOne("Name")
                                .HasForeignKey("ErrorTest.Domain.ValueObjects.FullName", "UserId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("ErrorTest.Domain.ValueObjects.Name", "FirstName", b2 =>
                                {
                                    b2.Property<Guid?>("FullNameUserId");

                                    b2.Property<string>("FirstNamePart")
                                        .IsRequired()
                                        .HasColumnName("FirstName_FirstPart")
                                        .HasMaxLength(255);

                                    b2.Property<string>("LastNamePart")
                                        .HasColumnName("FirstName_LastPart")
                                        .HasMaxLength(255);

                                    b2.Property<string>("NameSeperator")
                                        .HasColumnName("FirstName_NameSeperator")
                                        .HasMaxLength(5);

                                    b2.ToTable("Users");

                                    b2.HasOne("ErrorTest.Domain.ValueObjects.FullName")
                                        .WithOne("FirstName")
                                        .HasForeignKey("ErrorTest.Domain.ValueObjects.Name", "FullNameUserId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });

                            b1.OwnsOne("ErrorTest.Domain.ValueObjects.Name", "LastName", b2 =>
                                {
                                    b2.Property<Guid?>("FullNameUserId");

                                    b2.Property<string>("FirstNamePart")
                                        .IsRequired()
                                        .HasColumnName("LastName_FirstPart")
                                        .HasMaxLength(255);

                                    b2.Property<string>("LastNamePart")
                                        .HasColumnName("LastName_LastPart")
                                        .HasMaxLength(255);

                                    b2.Property<string>("NameSeperator")
                                        .HasColumnName("LastName_NameSeperator")
                                        .HasMaxLength(5);

                                    b2.ToTable("Users");

                                    b2.HasOne("ErrorTest.Domain.ValueObjects.FullName")
                                        .WithOne("LastName")
                                        .HasForeignKey("ErrorTest.Domain.ValueObjects.Name", "FullNameUserId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });
                });

            modelBuilder.Entity("ErrorTest.Domain.Entities.UserClaims", b =>
                {
                    b.HasOne("ErrorTest.Domain.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
